{"ast":null,"code":"import { select } from '@ngrx/store';\nimport { errorSelector, isLoadingSelector, drinksSelector } from '../../store/selectors';\nimport * as DrinksActions from './../../store/actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport class DrinksComponent {\n  constructor(store) {\n    this.store = store;\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector));\n    this.error$ = this.store.pipe(select(errorSelector));\n    this.drinks$ = this.store.pipe(select(drinksSelector));\n  }\n  ngOnInit() {\n    this.store.dispatch(DrinksActions.getBeers());\n  }\n}\nDrinksComponent.ɵfac = function DrinksComponent_Factory(t) {\n  return new (t || DrinksComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\nDrinksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DrinksComponent,\n  selectors: [[\"app-drinks\"]],\n  decls: 2,\n  vars: 0,\n  template: function DrinksComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"drinks works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAM,QAAe,aAAa;AAC3C,SAASC,aAAa,EAAEC,iBAAiB,EAAEC,cAAc,QAAQ,uBAAuB;AAKxF,OAAO,KAAKC,aAAa,MAAM,uBAAuB;;;AAOtD,OAAM,MAAOC,eAAe;EAM1BC,YAAoBC,KAA+B;IAA/B,UAAK,GAALA,KAAK;IACvB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACD,KAAK,CAACE,IAAI,CAACT,MAAM,CAACE,iBAAiB,CAAC,CAAC;IAC5D,IAAI,CAACQ,MAAM,GAAG,IAAI,CAACH,KAAK,CAACE,IAAI,CAACT,MAAM,CAACC,aAAa,CAAC,CAAC;IACpD,IAAI,CAACU,OAAO,GAAG,IAAI,CAACJ,KAAK,CAACE,IAAI,CAACT,MAAM,CAACG,cAAc,CAAC,CAAC;EACxD;EAGAS,QAAQ;IACN,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACT,aAAa,CAACU,QAAQ,EAAE,CAAC;EAC/C;;AAfWT,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;MCd5BC,yBAAG;MAAAA,6BAAa;MAAAA,iBAAI","names":["select","errorSelector","isLoadingSelector","drinksSelector","DrinksActions","DrinksComponent","constructor","store","isLoading$","pipe","error$","drinks$","ngOnInit","dispatch","getBeers","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\f4ufymu\\Documents\\Development\\Learning\\NgRx\\test_1\\src\\app\\modules\\drinks\\components\\drinks\\drinks.component.ts","C:\\Users\\f4ufymu\\Documents\\Development\\Learning\\NgRx\\test_1\\src\\app\\modules\\drinks\\components\\drinks\\drinks.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { errorSelector, isLoadingSelector, drinksSelector } from '../../store/selectors';\nimport { AppStateInterface } from 'src/app/types/appState.interface';\nimport { Observable } from \"rxjs\"\n\nimport { DrinkInterface } from '../../types/drink.interface';\nimport * as DrinksActions from './../../store/actions'\n\n@Component({\n  selector: 'app-drinks',\n  templateUrl: './drinks.component.html',\n  styleUrls: ['./drinks.component.css']\n})\nexport class DrinksComponent implements OnInit{\n\n  isLoading$!: Observable<boolean>;\n  drinks$!: Observable<DrinkInterface[]>;\n  error$!: Observable<string | null>;\n\n  constructor(private store: Store<AppStateInterface>){\n    this.isLoading$ = this.store.pipe(select(isLoadingSelector));\n    this.error$ = this.store.pipe(select(errorSelector));\n    this.drinks$ = this.store.pipe(select(drinksSelector));\n  }\n\n\n  ngOnInit(): void {\n    this.store.dispatch(DrinksActions.getBeers())\n  }\n\n}\n","<p>drinks works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}