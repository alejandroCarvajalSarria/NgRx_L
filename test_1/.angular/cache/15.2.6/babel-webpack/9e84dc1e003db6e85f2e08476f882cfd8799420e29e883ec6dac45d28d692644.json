{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport * as DrinksActions from './actions';\nexport const initialState = {\n  isLoading: false,\n  drinks: [],\n  error: null\n};\nexport const reducers = createReducer(initialState, on(DrinksActions.getBeers, state => ({\n  ...state,\n  isLoading: true\n})), on(DrinksActions.getBeersSuccess, (state, action) => ({\n  ...state,\n  isLoading: true,\n  drinks: action.beers\n})), on(DrinksActions.getBeersFailure, (state, action) => ({\n  ...state,\n  isLoading: false,\n  error: action.error\n})));","map":{"version":3,"mappings":"AACA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAC/C,OAAO,KAAKC,aAAa,MAAM,WAAW;AAG1C,OAAO,MAAMC,YAAY,GAAwB;EAC7CC,SAAS,EAAE,KAAK;EAChBC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE;CACV;AAED,OAAO,MAAMC,QAAQ,GAAGP,aAAa,CACjCG,YAAY,EACZF,EAAE,CAACC,aAAa,CAACM,QAAQ,EAAGC,KAAK,KAAK;EAAE,GAAGA,KAAK;EAAEL,SAAS,EAAC;AAAI,CAAC,CAAC,CAAC,EACnEH,EAAE,CAACC,aAAa,CAACQ,eAAe,EAAE,CAACD,KAAK,EAAEE,MAAM,MAAK;EACjD,GAAGF,KAAK;EACRL,SAAS,EAAE,IAAI;EACfC,MAAM,EAAEM,MAAM,CAACC;CAClB,CAAC,CAAC,EACHX,EAAE,CAACC,aAAa,CAACW,eAAe,EAAE,CAACJ,KAAK,EAAEE,MAAM,MAAK;EACjD,GAAGF,KAAK;EACRL,SAAS,EAAC,KAAK;EACfE,KAAK,EAAEK,MAAM,CAACL;CACjB,CAAC,CAAC,CACN","names":["createReducer","on","DrinksActions","initialState","isLoading","drinks","error","reducers","getBeers","state","getBeersSuccess","action","beers","getBeersFailure"],"sourceRoot":"","sources":["C:\\Users\\f4ufymu\\Documents\\Development\\Learning\\NgRx\\test_1\\src\\app\\modules\\drinks\\store\\reducers.ts"],"sourcesContent":["import { DrinksStateInterface } from \"../types/drinkState.interface\";\r\nimport { createReducer, on } from \"@ngrx/store\";\r\nimport * as DrinksActions from './actions'\r\n\r\n\r\nexport const initialState:DrinksStateInterface = {\r\n    isLoading: false,\r\n    drinks: [],\r\n    error: null\r\n}\r\n\r\nexport const reducers = createReducer(\r\n    initialState,\r\n    on(DrinksActions.getBeers, (state)=> ({ ...state, isLoading:true})),\r\n    on(DrinksActions.getBeersSuccess, (state, action)=> ({\r\n        ...state, \r\n        isLoading: true,\r\n        drinks: action.beers\r\n    })),\r\n    on(DrinksActions.getBeersFailure, (state, action)=> ({\r\n        ...state,\r\n        isLoading:false,\r\n        error: action.error\r\n    }))\r\n)"]},"metadata":{},"sourceType":"module","externalDependencies":[]}