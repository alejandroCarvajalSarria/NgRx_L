{"ast":null,"code":"import { createEffect, ofType } from \"@ngrx/effects\";\nimport * as DrinkActions from \"./actions\";\nimport { mergeMap, map, catchError, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/drinks.service\";\nexport class DrinkEffects {\n  constructor(actions$, drinksService) {\n    this.actions$ = actions$;\n    this.drinksService = drinksService;\n    this.getDrinks$ = createEffect(() => this.actions$.pipe(ofType(DrinkActions.getBeers), mergeMap(() => {\n      return this.drinksService.getBeers().pipe(map(beers => DrinkActions.getBeersSuccess({\n        beers\n      })), catchError(error => of(DrinkActions.getBeersFailure({\n        error: error.message\n      }))));\n    })));\n  }\n}\nDrinkEffects.ɵfac = function DrinkEffects_Factory(t) {\n  return new (t || DrinkEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.DrinksService));\n};\nDrinkEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DrinkEffects,\n  factory: DrinkEffects.ɵfac\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,EAAWC,MAAM,QAAQ,eAAe;AAE7D,OAAO,KAAKC,YAAY,MAAM,WAAW;AACzC,SAASC,QAAQ,EAAEC,GAAG,EAAEC,UAAU,EAAEC,EAAE,QAAQ,MAAM;;;;AAKpD,OAAM,MAAOC,YAAY;EAkBrBC,YAAoBC,QAAiB,EAAUC,aAA4B;IAAvD,aAAQ,GAARD,QAAQ;IAAmB,kBAAa,GAAbC,aAAa;IAjB5D,eAAU,GAAGV,YAAY,CAAC,MACtB,IAAI,CAACS,QAAQ,CAACE,IAAI,CACdV,MAAM,CAACC,YAAY,CAACU,QAAQ,CAAC,EAE7BT,QAAQ,CAAC,MAAK;MACV,OAAO,IAAI,CAACO,aAAa,CACpBE,QAAQ,EAAE,CACVD,IAAI,CAACP,GAAG,CAACS,KAAK,IAAIX,YAAY,CAACY,eAAe,CAAC;QAAED;MAAK,CAAE,CAAC,CAAC,EACvDR,UAAU,CAACU,KAAK,IACZT,EAAE,CAACJ,YAAY,CAACc,eAAe,CAAC;QAAED,KAAK,EAAEA,KAAK,CAACE;MAAO,CAAE,CAAC,CAAC,CAC7D,CACJ;IACT,CAAC,CAAC,CACL,CACJ;EAG8E;;AAlBtEV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;AAAA","names":["createEffect","ofType","DrinkActions","mergeMap","map","catchError","of","DrinkEffects","constructor","actions$","drinksService","pipe","getBeers","beers","getBeersSuccess","error","getBeersFailure","message","factory"],"sourceRoot":"","sources":["C:\\Users\\f4ufymu\\Documents\\Development\\Learning\\NgRx\\test_1\\src\\app\\modules\\drinks\\store\\effects.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { createEffect, Actions, ofType } from \"@ngrx/effects\";\r\nimport { DrinksService } from \"../services/drinks.service\";\r\nimport * as DrinkActions from \"./actions\"\r\nimport { mergeMap, map, catchError, of } from 'rxjs'\r\n\r\n\r\n\r\n@Injectable()\r\nexport class DrinkEffects {\r\n    getDrinks$ = createEffect(() =>\r\n        this.actions$.pipe(\r\n            ofType(DrinkActions.getBeers),\r\n\r\n            mergeMap(() => {\r\n                return this.drinksService\r\n                    .getBeers()\r\n                    .pipe(map(beers => DrinkActions.getBeersSuccess({ beers })),\r\n                        catchError(error =>\r\n                            of(DrinkActions.getBeersFailure({ error: error.message }))\r\n                        )\r\n                    );\r\n            })\r\n        )\r\n    );\r\n\r\n\r\n    constructor(private actions$: Actions, private drinksService: DrinksService) { }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}