{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HttpService {\n  constructor(http) {\n    this.http = http;\n  }\n  get(url, httpOptions) {\n    return this.http.get(url, httpOptions).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    return throwError('Something bad happened; please try again later.');\n  }\n}\nHttpService.ɵfac = function HttpService_Factory(t) {\n  return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n};\nHttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpService,\n  factory: HttpService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;AAKzD,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;EAAe;EAEvCC,GAAG,CAACC,GAAW,EAAEC,WAAiB;IAChC,OAAO,IAAI,CAACH,IAAI,CACbC,GAAG,CAAMC,GAAG,EAAEC,WAAW,CAAC,CAC1BC,IAAI,CAACR,UAAU,CAAC,IAAI,CAACS,WAAW,CAAC,CAAC;EACvC;EAGAA,WAAW,CAACC,KAAwB;IAClC,OAAOT,UAAU,CAAC,iDAAiD,CAAC;EACtE;;AAbWC,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAS,SAAXT,WAAW;EAAAU,YAFV;AAAM","names":["catchError","throwError","HttpService","constructor","http","get","url","httpOptions","pipe","handleError","error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\f4ufymu\\Documents\\Development\\Learning\\NgRx\\test_1\\src\\app\\services\\http.service.ts"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, catchError, throwError } from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http:HttpClient) { }\n\n  get(url: string, httpOptions?: any): Observable<any> {\n    return this.http\n      .get<any>(url, httpOptions)\n      .pipe(catchError(this.handleError));\n  }\n\n\n  handleError(error: HttpErrorResponse) {\n    return throwError('Something bad happened; please try again later.');\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}