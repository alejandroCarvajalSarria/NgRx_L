{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@ngrx/effects\";\nimport * as i3 from \"@ngrx/store-devtools\";\nexport class AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, StoreModule.forRoot({}), EffectsModule.forRoot(), StoreDevtoolsModule.instrument({\n    maxAge: 25,\n    logOnly: false,\n    autoPause: true,\n    trace: false,\n    traceLimit: 75 // maximum stack trace frames to be stored (in case trace option was provided as true)\n  })]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent],\n    imports: [BrowserModule, AppRoutingModule, HttpClientModule, i1.StoreRootModule, i2.EffectsRootModule, i3.StoreDevtoolsModule]\n  });\n})();","map":{"version":3,"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AACzD,SAASC,gBAAgB,QAAQ,sBAAsB;AAEvD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,eAAe;AAC7C,SAASC,mBAAmB,QAAQ,sBAAsB;;;;;AAuB1D,OAAM,MAAOC,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,YAFRL,YAAY;AAAA;AAEbI,SAAS;YAhBlBP,aAAa,EACbE,gBAAgB,EAChBD,gBAAgB,EAChBG,WAAW,CAACK,OAAO,CAAC,EAAE,CAAC,EACvBJ,aAAa,CAACI,OAAO,EAAE,EACvBH,mBAAmB,CAACI,UAAU,CAAC;IAC7BC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,KAAK;IACdC,SAAS,EAAE,IAAI;IACfC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE,EAAE,CAAE;GACjB,CAAC;AAAA;;;2EAKOR,SAAS;IAAAS,eAnBlBb,YAAY;IAAAc,UAGZjB,aAAa,EACbE,gBAAgB,EAChBD,gBAAgB;EAAA;AAAA","names":["BrowserModule","HttpClientModule","AppRoutingModule","AppComponent","StoreModule","EffectsModule","StoreDevtoolsModule","AppModule","bootstrap","forRoot","instrument","maxAge","logOnly","autoPause","trace","traceLimit","declarations","imports"],"sourceRoot":"","sources":["C:\\Users\\f4ufymu\\Documents\\Development\\Learning\\NgRx\\test_1\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store'\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot(),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n      logOnly: false, // Restrict extension to log-only mode\n      autoPause: true, // Pauses recording actions and state changes when the extension window is not open\n      trace: false, //  If set to true, will include stack trace for every dispatched action, so you can see it in trace tab jumping directly to that part of code\n      traceLimit: 75, // maximum stack trace frames to be stored (in case trace option was provided as true)\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}